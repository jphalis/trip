# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-09 16:04
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_id', models.SlugField(editable=False, max_length=255, unique=True)),
                ('source', models.CharField(max_length=100)),
                ('currency', models.CharField(default='usd', max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9, null=True)),
                ('amount_refunded', models.DecimalField(decimal_places=2, max_digits=9, null=True)),
                ('description', models.TextField(blank=True)),
                ('paid', models.NullBooleanField()),
                ('disputed', models.NullBooleanField()),
                ('refunded', models.NullBooleanField()),
                ('captured', models.NullBooleanField()),
                ('receipt_sent', models.BooleanField(default=False)),
                ('statement_descriptor', models.TextField(blank=True)),
                ('charge_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'charge',
                'verbose_name_plural': 'charges',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('cus_id', models.SlugField(editable=False, max_length=255, unique=True)),
                ('plan_id', models.SlugField(blank=True, max_length=255)),
                ('subscription_id', models.SlugField(blank=True, max_length=120)),
                ('account_balance', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('currency', models.CharField(blank=True, default='usd', help_text='3-letter ISO code for currency.', max_length=3)),
                ('auto_renew', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(help_text='The default end date will be 365 days from now.')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('invoice_id', models.SlugField(editable=False, max_length=255, unique=True)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=9)),
                ('attempted', models.NullBooleanField()),
                ('attempt_count', models.PositiveIntegerField(null=True)),
                ('statement_descriptor', models.TextField(blank=True)),
                ('currency', models.CharField(default='usd', max_length=10)),
                ('closed', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('paid', models.BooleanField(default=False)),
                ('receipt_number', models.CharField(blank=True, max_length=255)),
                ('period_end', models.DateTimeField()),
                ('period_start', models.DateTimeField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=9)),
                ('total', models.DecimalField(decimal_places=2, max_digits=9)),
                ('charge', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='billing.Charge')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='billing.Customer')),
            ],
            options={
                'verbose_name': 'invoice',
                'verbose_name_plural': 'invoices',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('plan_id', models.SlugField(editable=False, max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='A positive integer in cents (or 0 for a free plan) representing how much to charge (on a recurring basis).', max_digits=15, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('interval', models.CharField(default='year', help_text='Specifies billing frequency. Either day, week, month or year.', max_length=5)),
                ('name', models.CharField(help_text='Name of the plan, to be displayed on invoices and in the web interface.', max_length=150)),
                ('currency', models.CharField(default='usd', help_text='3-letter ISO code for currency.', max_length=3)),
                ('interval_count', models.IntegerField(default=1, help_text='The number of intervals between each subscription billing. For example, interval=month and interval_count=3 bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).')),
                ('metadata', jsonfield.fields.JSONField(blank=True, help_text='A set of key/value pairs that you can attach to a plan. It can be useful for storing additional information about the plan in a structured format.', null=True)),
                ('statement_descriptor', models.CharField(blank=True, help_text="An arbitrary string to be displayed on your customer's credit card statement. This may be up to 22 characters.", max_length=22)),
                ('trial_period_days', models.PositiveIntegerField(default=0, help_text="Specifies a trial period in (an integer number of) days. If you include a trial period, the customer won't be billed for the first time until the trial period ends.", null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('sub_id', models.SlugField(editable=False, max_length=255, unique=True)),
                ('application_fee_percent', models.DecimalField(decimal_places=2, default=None, max_digits=3, null=True)),
                ('cancel_at_period_end', models.BooleanField(default=False)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('current_period_start', models.DateTimeField(blank=True, null=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('start', models.DateTimeField()),
                ('status', models.CharField(help_text='Choices are: trialing, active, past_due, canceled, or unpaid.', max_length=25)),
                ('trial_period_days', models.PositiveIntegerField(default=0, help_text="Specifies a trial period in (an integer number of) days. If you include a trial period, the customer won't be billed for the first time until the trial period ends.", null=True)),
                ('trial_end', models.DateTimeField(blank=True, null=True)),
                ('trial_start', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Customer')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.Plan')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='billing.Subscription'),
        ),
        migrations.AddField(
            model_name='charge',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charges', to='billing.Customer'),
        ),
        migrations.AddField(
            model_name='charge',
            name='invoice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='charges', to='billing.Invoice'),
        ),
    ]
